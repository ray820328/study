执行sqlite3 .svn/wc.db "select * from work_queue"
看到work_queue中保存的工作队列
执行sqlite3 .svn/wc.db "delete from work_queue" 删除工作队列

Git本地仓库（Repository）详解
https://www.cnblogs.com/joshua317/articles/4606328.html

git eclipse 冲突解决方法
http://blog.csdn.net/rosten/article/details/17068285


@echo off
::    
:: Stops commits that have empty log messages.
::

@echo off

set svnlook="svnlook.exe"
setlocal

rem Subversion sends through the path to the repository and transaction id
set REPOS=%1
set TXN=%2

rem check for an empty log message
%svnlook% log %REPOS% -t %TXN% | findstr . > nul
if %errorlevel% gtr 0 (goto err) else exit 0

:err
echo. 1>&2
echo 请填写相关问题ID到修改日志，谢谢！ 1>&2
exit 1

git add . 
git add xx命令可以将xx文件添加到暂存区，如果有很多改动可以通过 git add -A .来一次添加所有改变的文件。注意 -A 选项后面还有一个句点。 git add -A表示添加所有内容， git add . 表示添加新文件和编辑过的文件不包括删除的文件; git add -u 表示添加编辑或者删除的文件，不包括新添加的文件
git commit -m "comment"
git pull [远程主机名] [远程分支名]:[本地分支名] --rebase origin master
git push [远程主机名] [本地分支名]:[远程分支名] -u origin master
git fetch [远程主机名] [分支名]
git checkout -m 版本号 文件/文件夹
git branch -r/-a --来查看远程分支
git checkout -b newBrach origin/master --在origin/master的基础上，创建一个新分支。
$ git merge origin/master
# 或者在本地分支上合并远程分支
$ git rebase origin/master

保留生产服务器上所做的改动,仅并入新配置项
git stash
git pull
git stash pop
可以使用git diff -w +文件名 来确认代码自动合并的情况

代码库中的文件完全覆盖本地工作版本
git reset --hard
git pull
针对文件回退本地修改
git checkout HEAD file/to/restore

