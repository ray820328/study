<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0054)http://blog.csdn.net/kangojian/article/details/5289410 -->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    <script type="text/javascript" async="" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/ga.js"></script><script id="allmobilize" charset="utf-8" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/allmobilize.min.js"></script><style type="text/css"></style>
 <meta http-equiv="Cache-Control" content="no-siteapp"><link rel="alternate" media="handheld" href="http://blog.csdn.net/kangojian/article/details/5289410#">

    <title>JVM 垃圾回收机制及性能调优案列   - kangojian的专栏
        - 博客频道 - CSDN.NET</title>
    
    <meta name="description" content="堆大小搭配要注意JVM堆内存实际分成好几种，可以详细配置 吞吐量  暂停（垃圾回收的时候经常带来程序暂停）选择 并行垃圾回收能大大降低暂停时间，稍微提高一点CPU使用先看看堆内存种类：垃圾回收主要是对Young Generation块和Old Generation块内存进行回收，YG用来放新产生的对象，经过几次回收还没回收掉的对象往OG中移动，对YG进行垃圾回收又叫做Min">
    <script src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/jquery.js" type="text/javascript"></script>
    <script type="text/javascript" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/ad.js"></script>
        <!--new top-->
       
        <link rel="stylesheet" href="http://static.csdn.net/public/common/toolbar/css/index.css">
        <!--new top-->

    <link rel="Stylesheet" type="text/css" href="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/style.css">
    <link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="http://blog.csdn.net/kangojian/rss/list">
    <link rel="shortcut icon" href="http://csdnimg.cn/public/favicon.ico">
    <link type="text/css" rel="stylesheet" href="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/default.css">
 


<script src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/share.js"></script><script type="text/javascript" charset="utf-8" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/tracking.js"></script><script type="text/javascript" charset="utf-8" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/main.js"></script><link href="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/bdsstyle.css" rel="stylesheet" type="text/css"><link rel="stylesheet" type="text/css" href="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/style(1).css"><link type="text/css" rel="stylesheet" href="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/style(2).css"><script src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/logger.js"></script><link rel="stylesheet" href="http://bdimg.share.baidu.com/static/api/css/share_style0_16.css?v=89a7173d.css"></head>
<body><iframe frameborder="0" style="display: none;"></iframe>
    
   
      <!--new top-->
    <script id="toolbar-tpl-scriptId" fixed="true" prod="blog" skin="black" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/html.js" type="text/javascript"></script><div class="csdn-toolbar csdn-toolbar-skin-black ">        <div class="container row center-block ">          <div class="col-md-3 pull-left logo clearfix"><a href="http://www.csdn.net/?ref=toolbar" title="CSDN首页" target="_blank" class="icon"></a><a title="频道首页" href="http://blog.csdn.net/?ref=toolbar_logo" target="_blank" class="img blog-icon"></a></div>          <div class="pull-right login-wrap unlogin">            <ul class="btns">              <li class="loginlink"><a href="https://passport.csdn.net/account/login?ref=toolbar" target="_top">登录&nbsp;</a>|<a target="_top" href="https://passport.csdn.net/account/register?ref=toolbar">&nbsp;注册</a></li>              <li class="search">                <div class="icon on-search-icon">                  <div class="wrap">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                    <form action="http://so.csdn.net/search" method="get" target="_blank">                      <input type="hidden" value="toolbar" name="ref" accesskey="2">                      <div class="border">                        <input placeholder="搜索" type="text" value="" name="q" accesskey="2"><span class="icon-enter-sm"></span>                      </div>                    </form>                  </div>                </div>              </li>              <li class="favor">                <div class="icon on-favor-icon">                  <div class="wrap">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                    <div style="display:none;" class="favor-success"><span class="msg">收藏成功</span>                      <div class="btns"><span class="btn btn-primary ok">确定</span></div>                    </div>                    <div style="display:none;" class="favor-failed"><span class="icon-danger-lg"></span><span class="msg">收藏失败，请重新收藏</span>                      <div class="btns"><span class="btn btn-primary ok">确定</span></div>                    </div>                    <form role="form" class="form-horizontal favor-form">                      <div class="form-group">                        <div class="clearfix">                          <label for="input-title" class="col-sm-2 control-label">标题</label>                          <div class="col-sm-10">                            <input id="inputTitle" type="text" placeholder="" class="title form-control">                          </div>                        </div>                        <div class="alert alert-danger"><strong></strong>标题不能为空</div>                      </div>                      <div class="form-group">                        <label for="input-url" class="col-sm-2 control-label">网址</label>                        <div class="col-sm-10">                          <input id="input-url" type="text" placeholder="" class="url form-control">                        </div>                      </div>                      <div class="form-group">                        <label for="input-tag" class="col-sm-2 tag control-label">标签</label>                        <div class="col-sm-10">                          <input id="input-tag" type="text" class="form-control tag">                        </div>                      </div>                      <div class="form-group">                        <label for="input-description" class="description col-sm-2 control-label">摘要</label>                        <div class="col-sm-10">                          <textarea id="input-description" class="form-control description"></textarea>                        </div>                      </div>                      <div class="form-group">                        <div class="col-sm-offset-2 col-sm-10 ft">                          <div class="col-sm-4 pull-left">                            <div class="checkbox">                              <label>                                <input type="checkbox" name="share" checked="checked" class="share">公开                              </label>                            </div>                          </div>                          <div class="col-sm-8 pull-right favor-btns">                            <button type="button" class="cancel btn btn-default">取消</button>                            <button type="submit" class="submit btn btn-primary">收藏</button>                          </div>                        </div>                      </div>                    </form>                  </div>                </div>              </li>              <li class="notify">                <div style="display:none" class="number"></div>                <div style="display:none" class="icon-hasnotes-sm"></div>                <div id="header_notice_num"></div>                <div class="icon on-notify-icon">                  <div class="wrap">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                    <div id="note1" class="csdn_note">                      <div class="box"></div>                    <iframe src="about:block" frameborder="0" allowtransparency="true" style="z-index:-1;position:absolute;top:0;left:0;width:100%;height:100%;background:transparent"></iframe></div>                  </div>                </div>              </li>              <li class="ugc">                <div class="icon on-ugc-icon">                  <div class="wrap clearfix">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                    <dl>                      <dt><a href="http://geek.csdn.net/news/expert?ref=toolbar" target="_blank" class="p-news clearfix"><em class="icon"></em><span>分享资讯</span></a></dt>                      <dt><a href="http://share.csdn.net/slides/new?ref=toolbar" target="_blank" class="p-doc clearfix"><em class="icon"></em><span>传PPT/文档</span></a></dt>                      <dt><a href="http://bbs.csdn.net/topics/new?ref=toolbar" target="_blank" class="p-ask clearfix"><em class="icon"></em><span>提问题</span></a></dt>                      <dt><a href="http://write.blog.csdn.net/postedit?ref=toolbar" target="_blank" class="p-blog clearfix"><em class="icon"></em><span>写博客</span></a></dt>                      <dt><a href="http://u.download.csdn.net/upload?ref=toolbar" target="_blank" class="p-src clearfix"><em class="icon"></em><span>传资源</span></a></dt>                      <dt><a href="https://code.csdn.net/projects/new?ref=toolbar" target="_blank" class="c-obj clearfix"><em class="icon"></em><span>创建项目</span></a></dt>                      <dt><a href="https://code.csdn.net/snippets/new?ref=toolbar" target="_blank" class="c-code clearfix"><em class="icon"></em><span>创建代码片</span></a></dt>                    </dl>                  </div>                </div>              </li>              <li class="profile">                <div class="icon on-profile-icon"><img src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/100x100.jpg" class="curr-icon-img">                  <div class="wrap clearfix">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                    <div class="bd">                      <dl class="clearfix">                        <dt class="pull-left img"><a target="_blank" href="http://my.csdn.net/?ref=toolbar" class="avatar"><img src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/100x100.jpg"></a></dt>                        <dd class="info"><a target="_blank" href="http://my.csdn.net/?ref=toolbar" class="nickname"></a><a class="set-nick" href="https://passport.csdn.net/account/profile">设置昵称<span class="write-icon"></span></a><span class="dec"><a class="fill-dec" href="http://my.csdn.net/" target="_blank">编辑自我介绍，让更多人了解你<span class="write-icon"></span></a></span></dd>                      </dl>                    </div>                    <div class="ft clearfix"><a target="_blank" href="http://my.csdn.net/my/account/changepwd?ref=toolbar" class="pull-left"><span class="icon-cog"></span>帐号设置</a><a href="https://passport.csdn.net/account/logout?ref=toolbar" target="_top" class="pull-right "><span class="icon-signout"></span><span class="out">退出</span></a></div>                  </div>                </div>              </li>              <li class="apps">                <div class="icon on-apps-icon">                  <div class="wrap clearfix">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                  <div class="detail">                    <dl>                      <dt>                        <h5>社区</h5>                      </dt>                      <dd> <a href="http://blog.csdn.net/?ref=toolbar" target="_blank">博客</a></dd>                      <dd> <a href="http://bbs.csdn.net/?ref=toolbar" target="_blank">论坛</a></dd>                      <dd> <a href="http://download.csdn.net/?ref=toolbar" target="_blank">下载</a></dd>                      <dd><a href="http://share.csdn.net/?ref=toolbar" target="_blank">Share</a></dd>                      <dd><a href="http://geek.csdn.net/?ref=toolbar" target="_blank">极客头条</a></dd>                    </dl>                  </div>                  <div class="detail">                    <dl>                      <dt>                        <h5>服务</h5>                      </dt>                      <dd> <a href="https://code.csdn.net/?ref=toolbar" target="_blank">CODE</a></dd>                      <dd> <a href="http://hero.csdn.net/?ref=toolbar" target="_blank">英雄会</a></dd>                      <dd> <a href="http://huiyi.csdn.net/?ref=toolbar" target="_blank">活动</a></dd>                      <dd> <a href="http://www.csto.com/?ref=toolbar" target="_blank">CSTO</a></dd>                    </dl>                  </div>                  <div class="detail last">                    <dl>                      <dt>                        <h5>俱乐部</h5>                      </dt>                      <dd> <a href="http://cto.csdn.net/?ref=toolbar" target="_blank">CTO俱乐部</a></dd>                      <dd> <a href="http://student.csdn.net/?ref=toolbar" target="_blank">高校俱乐部</a></dd>                    </dl>                  </div>                </div>              </div>            </li>            </ul>          </div>        </div>    </div>
     <!--new top-->
    <div id="container">
        <div id="header">
    <div class="header">
        <div id="blog_title">
            <h2>
                <a href="http://blog.csdn.net/kangojian">kangojian的专栏</a></h2>
            <h3></h3>
            <div class="clear">
            </div>
        </div>
        <div class="clear">
        </div>
    </div>
</div>
<div id="navigator">
    <div class="navigator_bg">
    </div>
    <div class="navigator">
        <ul>
                <li id="btnContents"><a href="http://blog.csdn.net/kangojian?viewmode=contents"><span onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_mulu&#39;])">
                    <img src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/ico_list.gif">目录视图</span></a></li>
                <li id="btnView"><a href="http://blog.csdn.net/kangojian?viewmode=list"><span onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_zhaiyao&#39;])">
                    <img src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/ico_summary.gif">摘要视图</span></a></li>
                <li id="btnRss"><a href="http://blog.csdn.net/kangojian/rss/list"><span onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_RSS&#39;])">
                    <img src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/ico_rss.gif">订阅</span></a></li>                

            </ul>
    </div>
</div>
<script type="text/javascript">
    var username = "kangojian";
    var _blogger = username;
    var blog_address = "http://blog.csdn.net/kangojian";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = "";  
</script>

        <div id="body">
            <div id="main">
                <div class="main">
                        <div class="ad_class">
<div class="notice tracking-ad" data-mod="popu_3"> 

<a href="http://blog.csdn.net/blogdevteam/article/details/38514369" target="_blank">
<font color="blue">7月推荐文章汇总
</font></a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://download.csdn.net/album/detail/257" target="_blank">
<font color="red">Android 精彩案例</font></a>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/blogdevteam/article/details/38418263" target="_blank">
<font color="blue">【独具慧眼 推荐有礼】找出您心中的技术大牛
</font></a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/blogdevteam/article/details/37874361" target="_blank">博文大赛获奖名单公布 
<font color="red"> 
</font></a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/csdnproduct/article/details/38110573" target="_blank">
<font color="blue">关注社区微信得下载分
</font></a>


</div>                        </div>
                          
<link href="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/comment1.css" type="text/css" rel="stylesheet">
<link href="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/style1.css" type="text/css" rel="stylesheet">
<script language="JavaScript" type="text/javascript" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/jquery.cookie.js"></script>
<script type="text/javascript" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/main(1).js"></script>
<div id="article_details" class="details">
    <div class="article_title">   
         <span class="ico ico_type_Original"></span>


    <h1>
        <span class="link_title"><a href="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET.htm">
        JVM 垃圾回收机制及性能调优案列  
        </a></span>
    </h1>
</div>

    <div class="article_manage">
        <span class="link_categories">
        分类：
            <a href="http://blog.csdn.net/kangojian/article/category/567162" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_fenlei&#39;]);">杂谈</a> 
        </span>
    <span class="link_postdate">2010-02-04 19:57</span>
    <span class="link_view" title="阅读次数">1969人阅读</span>
    <span class="link_comments" title="评论次数"><a href="http://blog.csdn.net/kangojian/article/details/5289410#comments" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_pinglun&#39;])">评论</a>(0)</span>
    <span class="link_collect"><a href="javascript:void(0);" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_shoucang&#39;]);collectArticle(&#39;JVM 垃圾回收机制及性能调优案列  &#39;,&#39;5289410&#39;);return false;" title="收藏">收藏</a></span>
    <span class="link_report"><a href="http://blog.csdn.net/kangojian/article/details/5289410#report" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_jubao&#39;]);report(5289410,2);return false;" title="举报">举报</a></span>
    
</div>
<div class="tag2box"><a href="http://www.csdn.net/tag/jvm" target="_blank" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_tag&#39;]);">jvm</a><a href="http://www.csdn.net/tag/generation" target="_blank" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_tag&#39;]);">generation</a><a href="http://www.csdn.net/tag/application" target="_blank" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_tag&#39;]);">application</a><a href="http://www.csdn.net/tag/parallel" target="_blank" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_tag&#39;]);">parallel</a><a href="http://www.csdn.net/tag/processing" target="_blank" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_tag&#39;]);">processing</a><a href="http://www.csdn.net/tag/cms" target="_blank" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_tag&#39;]);">cms</a></div>

  
    
<div style="clear:both"></div><div style="border:solid 1px #ccc; background:#eee; float:left; min-width:200px;padding:4px 10px;"><p style="text-align:right;margin:0;"><span style="float:left;">目录<a href="http://blog.csdn.net/kangojian/article/details/5289410#" title="系统根据文章中H1到H6标签自动生成文章目录">(?)</a></span><a href="http://blog.csdn.net/kangojian/article/details/5289410#" onclick="javascript:return openct(this);" title="展开">[+]</a></p><ol style="display:none;margin-left:14px;padding-left:14px;line-height:160%;"><li><a href="http://blog.csdn.net/kangojian/article/details/5289410#t0">Snapshots from a verbosegc Log File Generated by Using the Following Switches</a></li><ol><li><a href="http://blog.csdn.net/kangojian/article/details/5289410#t1">Young Generation GC</a></li></ol><li><a href="http://blog.csdn.net/kangojian/article/details/5289410#t2">Old Generation GC</a></li><ol><li><a href="http://blog.csdn.net/kangojian/article/details/5289410#t3">CMS Collector</a></li><li><a href="http://blog.csdn.net/kangojian/article/details/5289410#t4">Default Mark-Compact Collector</a></li></ol></ol></div><div style="clear:both"></div><div id="article_content" class="article_content">
<ol>
<li>堆大小搭配要注意</li>
<li>JVM堆内存实际分成好几种，可以详细配置 </li>
<li>吞吐量&nbsp; 暂停（垃圾回收的时候经常带来程序暂停）选择 </li>
<li>并行垃圾回收能大大降低暂停时间，稍微提高一点CPU使用</li>
</ol>
<p>先看看堆内存种类：<br><img style="DISPLAY: block; MARGIN: 0px auto 10px; TEXT-ALIGN: center" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/11f7d9ba1f0g215.jpg" border="0" alt="">垃圾回收主要是对Young Generation块和Old Generation块内存进行回收，YG用来放新产生的对象，经过几次回收还没回收掉的对象往OG中移动，<br>对YG进行垃圾回收又叫做MinorGC，对OG垃圾回收叫MajorGC，两块内存回收互不干涉<br><br>看案例：<br>jmap -heap 2343<br>Attaching to process ID 2343, please wait...<br>Debugger attached successfully.<br>Server compiler detected.<br>JVM version is 11.0-b16<br><br><span style="COLOR: #0000ff">using thread-local object allocation.</span><br><span style="COLOR: #0000ff">Parallel GC with 8 thread(s)</span><br><br>Heap Configuration:<br>&nbsp;&nbsp; MinHeapFreeRatio = 40<br>&nbsp;&nbsp; MaxHeapFreeRatio = 70<br>&nbsp;&nbsp; MaxHeapSize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 4294967296 (4096.0MB)<br>&nbsp;&nbsp; NewSize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 2686976 (2.5625MB)<br>&nbsp;&nbsp; MaxNewSize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = -65536 (-0.0625MB)<br>&nbsp;&nbsp; OldSize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 5439488 (5.1875MB)<br>&nbsp;&nbsp; NewRatio&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="BACKGROUND-COLOR: #ffff99">（YG，OG 大小比为1：2）</span><br>&nbsp;&nbsp; SurvivorRatio&nbsp;&nbsp;&nbsp; = 8<br>&nbsp;&nbsp; PermSize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 21757952 (20.75MB)<br>&nbsp;&nbsp; MaxPermSize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 268435456 (256.0MB)<br><br>Heap Usage:<br>PS Young Generation<br><span style="COLOR: #0000ff">Eden Space:</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; capacity = 1260060672 (1201.6875MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; used&nbsp;&nbsp;&nbsp;&nbsp; = 64868288 (61.86322021484375MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; free&nbsp;&nbsp;&nbsp;&nbsp; = 1195192384 (1139.8242797851562MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; 5.148028935546367% used</span><br><span style="COLOR: #0000ff">From Space:</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; capacity = 85524480 (81.5625MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; used&nbsp;&nbsp;&nbsp;&nbsp; = 59457648 (56.70323181152344MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; free&nbsp;&nbsp;&nbsp;&nbsp; = 26066832 (24.859268188476562MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; 69.52120375359195% used</span><br><span style="COLOR: #0000ff">To Space:</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; capacity = 85852160 (81.875MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; used&nbsp;&nbsp;&nbsp;&nbsp; = 0 (0.0MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; free&nbsp;&nbsp;&nbsp;&nbsp; = 85852160 (81.875MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; 0.0% used</span><br>~~~~~~~~~~~~~~~~~~~~~~~~~~这三块为上面所说的YG大小和使用情况<br>PS Old Generation<br>&nbsp;&nbsp; capacity = 2291138560 (2185.0MB)<br>&nbsp;&nbsp; used&nbsp;&nbsp;&nbsp;&nbsp; = 1747845928 (1666.8757705688477MB)<br>&nbsp;&nbsp; free&nbsp;&nbsp;&nbsp;&nbsp; = 543292632 (518.1242294311523MB)<br>&nbsp;&nbsp; 76.28722062099989% used<br>~~~~~~~~~~~~~~~~~~~~~~~~~~OG大小和使用情况<br>PS Perm Generation<br>&nbsp;&nbsp; capacity = 108265472 (103.25MB)<br>&nbsp;&nbsp; used&nbsp;&nbsp;&nbsp;&nbsp; = 107650712 (102.6637191772461MB)<br>&nbsp;&nbsp; free&nbsp;&nbsp;&nbsp;&nbsp; = 614760 (0.5862808227539062MB)<br>&nbsp;&nbsp; 99.43217353728436% used<br><br>这台机器简单说YG内存1G，OG内存2G，总内存4G<br>在这样的配置下，GC运行情况：<br>jstat -gcutil -h5 2343 4s 100 <br>&nbsp; S0&nbsp;&nbsp;&nbsp;&nbsp; S1&nbsp;&nbsp;&nbsp;&nbsp; E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; O&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; P&nbsp;&nbsp;&nbsp;&nbsp; YGC&nbsp;&nbsp;&nbsp;&nbsp; YGCT&nbsp;&nbsp;&nbsp; FGC&nbsp;&nbsp;&nbsp; FGCT&nbsp;&nbsp;&nbsp;&nbsp; GCT&nbsp;&nbsp; <br>&nbsp;79.82&nbsp;&nbsp; 0.00&nbsp; 75.34&nbsp; 78.55&nbsp; 99.44&nbsp;&nbsp; 7646 1221.668&nbsp;&nbsp; 398 2052.993 3274.661 <br>&nbsp; 0.00&nbsp; 79.52&nbsp;&nbsp; 0.62&nbsp; 78.63&nbsp; 99.44&nbsp;&nbsp; 7647 1221.782&nbsp;&nbsp; 398 2052.993 3274.775&nbsp; <span style="BACKGROUND-COLOR: #ffff99">这里发生了一次YG GC，也就是MinorGC，耗时0.12s</span><br>&nbsp; 0.00&nbsp; 79.52&nbsp; 28.95&nbsp; 78.63&nbsp; 99.44&nbsp;&nbsp; 7647 1221.782&nbsp;&nbsp; 398 2052.993 3274.775<br>&nbsp; 0.00&nbsp; 79.52&nbsp; 46.34&nbsp; 78.63&nbsp; 99.44&nbsp;&nbsp; 7647 1221.782&nbsp;&nbsp; 398 2052.993 3274.775<br><br><span style="COLOR: #0000ff; BACKGROUND-COLOR: #ffffff">同时可以看到总共进行了398次Major GC 总耗时2052.993 所以每次Major GC时间为：2052.993/398=5.16秒</span><br><span style="COLOR: #0000ff; BACKGROUND-COLOR: #ffffff">这是个很严重的问题，进行Major GC的时候程序会暂停，无法响应，居然会暂停5秒多，这谁都无法接受吧 :)</span><br><span style="COLOR: #0000ff; BACKGROUND-COLOR: #ffffff">同样Minor GC进行了7647次，总用时1221.782 平均时间为0.16秒，算是可以接受</span><br><br><br><span style="BACKGROUND-COLOR: #ff0000">再来看看修改配置后：</span><br>jmap -heap 14103<br>Attaching to process ID 14103, please wait...<br>Debugger attached successfully.<br>Server compiler detected.<br>JVM version is 11.0-b16<br><br><span style="COLOR: #0000ff">using parallel threads in the new generation.</span><br><span style="COLOR: #0000ff">using thread-local object allocation.</span><br><span style="COLOR: #0000ff">Concurrent Mark-Sweep GC</span><br><br>Heap Configuration:<br>&nbsp;&nbsp; MinHeapFreeRatio = 40<br>&nbsp;&nbsp; MaxHeapFreeRatio = 70<br>&nbsp;&nbsp; MaxHeapSize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 4294967296 (4096.0MB)<br>&nbsp;&nbsp; NewSize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 536870912 (512.0MB)<br>&nbsp;&nbsp; MaxNewSize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 536870912 (512.0MB)<br>&nbsp;&nbsp; OldSize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 5439488 (5.1875MB)<br>&nbsp;&nbsp; NewRatio&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =<span style="BACKGROUND-COLOR: #ffff00"> 4&nbsp;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; YG：OG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1：4 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp; SurvivorRatio&nbsp;&nbsp;&nbsp; = 8<br>&nbsp;&nbsp; PermSize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 268435456 (256.0MB)<br>&nbsp;&nbsp; MaxPermSize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 268435456 (256.0MB)<br><br>Heap Usage:<br><span style="COLOR: #0000ff">New Generation (Eden + 1 Survivor Space):</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; capacity = 483196928 (460.8125MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; used&nbsp;&nbsp;&nbsp;&nbsp; = 428284392 (408.4438247680664MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; free&nbsp;&nbsp;&nbsp;&nbsp; = 54912536 (52.368675231933594MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; 88.63557841162434% used</span><br><span style="COLOR: #0000ff">Eden Space:</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; capacity = 429522944 (409.625MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; used&nbsp;&nbsp;&nbsp;&nbsp; = 404788608 (386.0364990234375MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; free&nbsp;&nbsp;&nbsp;&nbsp; = 24734336 (23.5885009765625MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; 94.24144010337199% used</span><br><span style="COLOR: #0000ff">From Space:</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; capacity = 53673984 (51.1875MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; used&nbsp;&nbsp;&nbsp;&nbsp; = 23495784 (22.407325744628906MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; free&nbsp;&nbsp;&nbsp;&nbsp; = 30178200 (28.780174255371094MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; 43.77499534970238% used</span><br><span style="COLOR: #0000ff">To Space:</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; capacity = 53673984 (51.1875MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; used&nbsp;&nbsp;&nbsp;&nbsp; = 0 (0.0MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; free&nbsp;&nbsp;&nbsp;&nbsp; = 53673984 (51.1875MB)</span><br><span style="COLOR: #0000ff">&nbsp;&nbsp; 0.0% used</span><br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~YG 大小和使用状态<br>concurrent mark-sweep generation:<br>&nbsp;&nbsp; capacity = 3758096384 (3584.0MB)<br>&nbsp;&nbsp; used&nbsp;&nbsp;&nbsp;&nbsp; = 1680041600 (1602.2125244140625MB)<br>&nbsp;&nbsp; free&nbsp;&nbsp;&nbsp;&nbsp; = 2078054784 (1981.7874755859375MB)<br>&nbsp;&nbsp; 44.70459052494594% used<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~OG 大小和使用状态<br>Perm Generation:<br>&nbsp;&nbsp; capacity = 268435456 (256.0MB)<br>&nbsp;&nbsp; used&nbsp;&nbsp;&nbsp;&nbsp; = 128012184 (122.0819320678711MB)<br>&nbsp;&nbsp; free&nbsp;&nbsp;&nbsp;&nbsp; = 140423272 (133.9180679321289MB)<br>&nbsp;&nbsp; 47.688254714012146% used<br><br>在这个配置下，GC运行情况：<br>jstat -gcutil -h5 14103 4s 100 <br>&nbsp; S0&nbsp;&nbsp;&nbsp;&nbsp; S1&nbsp;&nbsp;&nbsp;&nbsp; E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; O&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; P&nbsp;&nbsp;&nbsp;&nbsp; YGC&nbsp;&nbsp;&nbsp;&nbsp; YGCT&nbsp;&nbsp;&nbsp; FGC&nbsp;&nbsp;&nbsp; FGCT&nbsp;&nbsp;&nbsp;&nbsp; GCT&nbsp;&nbsp; <br>&nbsp;47.49&nbsp;&nbsp; 0.00&nbsp; 64.82&nbsp; 46.08&nbsp; 47.69&nbsp; 20822 2058.631&nbsp;&nbsp;&nbsp; 68&nbsp;&nbsp; 22.734 2081.365<br>&nbsp; 0.00&nbsp; 37.91&nbsp; 38.57&nbsp; 46.13&nbsp; 47.69&nbsp; 20823 2058.691&nbsp;&nbsp;&nbsp; 68&nbsp;&nbsp; 22.734 2081.425&nbsp; <span style="BACKGROUND-COLOR: #ffff99">这里发生了一次YG GC，也就是MinorGC，耗时0.06s</span><br>&nbsp;46.69&nbsp;&nbsp; 0.00&nbsp; 15.19&nbsp; 46.18&nbsp; 47.69&nbsp; 20824 2058.776&nbsp;&nbsp;&nbsp; 68&nbsp;&nbsp; 22.734 2081.510<br>&nbsp;46.69&nbsp;&nbsp; 0.00&nbsp; 74.59&nbsp; 46.18&nbsp; 47.69&nbsp; 20824 2058.776&nbsp;&nbsp;&nbsp; 68&nbsp;&nbsp; 22.734 2081.510<br>&nbsp; 0.00&nbsp; 40.29&nbsp; 19.95&nbsp; 46.24&nbsp; 47.69&nbsp; 20825 2058.848&nbsp;&nbsp;&nbsp; 68&nbsp;&nbsp; 22.734 2081.582<br><br><span style="COLOR: #0000ff">MajorGC平均时间：22.734/68=0.334秒（上面是5秒多吧）</span><br><span style="COLOR: #0000ff">MinorGC平均时间：2058.691/20823=0.099秒（比上面略少）</span><br><br><br>===============================================================</p>
<p>These two new collectors introduced in J2SE1.4.1 are: </p>
<ul>
<li>parallel collector<br>The parallel collector is implemented in the young generation. It is multi-threaded and stop-the-world. This collector enables garbage collection to occur on multiple threads for better performance on multiprocessor machines. Even though it suspends all "mutators" (application threads), it is able to complete the given amount of garbage collection work much more quickly by leveraging all available CPUs on the system. This reduces the GC pauses in the young generation significantly. The parallel collector thus enables the applications to scale to larger number of CPUs as well as larger memory.</li>
<li>concurrent mark-sweep (cms) collector<br>The concurrent mark-sweep collector (CMS) is implemented in the old generation. The CMS collector executes "mostly concurrently" with the application, hence, is sometimes referred to as the "mostly-concurrent garbage collector". It trades the utilization of processing power that would otherwise be available to the application for shorter garbage collection pause times. The CMS collection is split into four phases: 
<ul>
<li>Initial mark </li>
<li>Concurrent marking </li>
<li>Remark </li>
<li>Concurrent sweeping</li>
</ul>
The "initial mark" and and "remark" phases are stop-the-world phases, in which the CMS collector has to "suspend" the mutators. During initial mark, it records all objects directly reachable from the "roots" of the system. During the "concurrent marking" phase, mutators are resumed and a concurrent marking phase is initiated. During the "remark" phase, the mutators are once again suspended to complete the final marking, and finally, during the "concurrent sweeping" phase, mutators are resumed and all unmarked objects are deallocated, while concurrently sweeping over the heap. The initial mark and remark pauses are quite minimal. <span style="COLOR: #0000ff">For an old generation size of 1G, they may be ~ 200 ms or less.</span> The concurrent sweeping phase, when the garbage is collected, may still take as much time as the mark-compact collector; however, this pause is hidden as the mutators are not suspended. The "mostly concurrent" nature of the CMS collector enables the JVM to scale to larger heaps and CPUs, thus addressing both the latency and throughput issues arising from the default mark-compact stop-the-world collector.</li>
</ul>
<p>Table 1 highlights the features of the different collectors available in J2SE1.4.1. </p>
<table border="0" cellspacing="0" cellpadding="0" align="center">
<tbody>
<tr>
<td>
<table border="1" cellspacing="0" cellpadding="3">
<tbody>
<tr valign="middle">
<td bgcolor="#ffffcc"><strong><span style="color: #666666;">Young Generation Collectors</span></strong></td>
<td bgcolor="#ffffcc"><strong><span style="color: #666666;">Old Generation Collectors</span></strong></td>
</tr>
<tr valign="top">
<td><strong><span style="color: #666666;">Copying collector</span></strong></td>
<td><strong><span style="color: #666666;">Mark-compact collector</span></strong></td>
</tr>
<tr valign="top">
<td>Default<br>Stop-the-world<br>Single threaded<br>All J2SEs</td>
<td>Default<br>Stop-the-world<br>Single threaded<br>All J2SEs</td>
</tr>
<tr valign="top">
<td><strong><span style="color: #666666;">Parallel collector</span></strong></td>
<td><strong><span style="color: #666666;">Concurrent mark-sweep collector</span></strong></td>
</tr>
<tr valign="top">
<td>Stop-the-world<br>Multi-threaded<br>J2SE1.4.1+</td>
<td>Mostly-concurrent<br>Single threaded<br>J2SE1.4.1+</td>
</tr>
</tbody>
</table>
</td>
</tr>
</tbody>
</table>
<p align="center"><em>Table 1. Summary of the features of different garbage collectors</em> </p>
<p>Figures 1, 2 and 3 are graphical illustrations of the different garbage collectors. The green arrows represent a multi-threaded application running on a multi-CPU box. <span style="COLOR: #ff0000">The red arrows represent the GC threads.</span> The length of the GC thread roughly represents the length of the GC pause. </p>
<p align="center"><br><em>Figure 1. Young generation collectors.</em> </p>
<p align="center">&nbsp;</p>
<p align="center"><em>Figure 2. Old generation collectors. Garbage collection with the Parallel Collector and Concurrent mark-sweep collector enabled together. Best Case scenario for high throughput and low latency.</em> </p>
<p align="center"><em>Figure 3. Garbage Collection with the two new collectors enabled together.</em> </p>
<p>As illustrated by the diagrams above, <span style="BACKGROUND-COLOR: #ffff00">use of the parallel collector in the young generation and the concurrent mark-sweep collector in the old generation together can help reduce pause times and GC sequential overhead. These two collectors thus help the applications to scale to larger number of processors, and to larger memory. <br></span></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="BACKGROUND-COLOR: #ffff00"><span style="BACKGROUND-COLOR: #ffffff">GC配置详细解释，和GCLog日志解析：</span></span></p>
<h3><a name="t0"></a>Snapshots from a "verbose:gc" Log File Generated by Using the Following Switches</h3>
<p><code>java -verbose:gc -XX:+PrintGCTimeStamps -XX:+PrintGCDetails -XX:+PrintTenuringDistribution -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -Xmx512m -Xms512m -XX:NewSize=24m -XX:MaxNewSize=24m -XX:SurvivorRatio=2 &lt;app-name&gt;</code> </p>
<h4><a name="t1"></a>Young Generation GC</h4>
<p><code>311.649: [GC 311.65: [ParNew Desired survivor size 4194304 bytes, new threshold 3 (max 31)</code> <br><code>- age 1: 1848472 bytes, 1848472 total</code> <br><code>- age 2: 1796200 bytes, 3644672 total</code> <br><code>- age 3: 1795664 bytes, 5440336 total</code> <br><code>:<span style="BACKGROUND-COLOR: #66ffcc"> 21647K-&gt;5312K(24576K)</span>, 0.1333032 secs] <span style="BACKGROUND-COLOR: #ffffcc">377334K-&gt;362736K(516096K)</span>, 0.1334940 secs]</code> </p>
<blockquote>
<p>The GC snapshot above describes a young generation GC and gives the following information: </p>
<ul>
<li>Total JVM heap at this GC was <code>516096K</code> and total heap size of the young generation was <code>24576K</code>. </li>
<li>The old generation heap at the time of this GC was <code>516096K - 24576K = 491520K.</code> </li>
<li>Describes the "aging distribution" of the objects allocated by the application in the young generation at the end of this GC cycle. This GC cycle set the <code>new threshold=3 </code>meaning that objects will age up to 3 before the next GC cycle takes place. </li>
<li>The <em>Desired survivor size</em> of 4194304 bytes was determined by <code>SurvivorRatio=2</code>, which sets the ratio of <code>Eden/Survivor space=2</code>. With a young generation heap set to 24MB, this would mean <code>24MB = 2 * Survivor space + Survivor space + Survivor space</code>, or <code>Survivor space=8MB</code>. With a default value of <code>TargetSurvivorRatio=50</code>, desired survivor size was set to 8 * .5 = 4MB </li>
<li>Time stamp of the GC relative to the start of the application run was <code>311.649 seconds</code> </li>
<li>Total GC pause for this collection in the young generation was <code>0.1334940 seconds.</code> </li>
<li>The size of the used young generation heap before this GC was<code> 21647K</code> </li>
<li>The size of the used young generation heap after this GC was <code>5312K</code> </li>
<li style="BACKGROUND-COLOR: #ffffcc"><code>377334K - 362736K = 14598K </code>of data was garbage collected in the young generation. </li>
<li style="BACKGROUND-COLOR: #66ff99"><code>21647K - 5312K - 14598K = 1737K</code> was promoted into the old generation. </li>
<li>The total size of the used heap was <code>377334K</code> before this GC took place. </li>
<li>The total size of the used heap was <code>362736K</code> after this GC took place. </li>
<li>The size of used heap in old generation before this GC was <code>377334K - 21647K = 355687K</code> </li>
<li>The size of used heap in old generation after this GC was <code>362736K - 5312K = 357424K</code> </li>
<li>The total size of objects promoted into the old generation during this GC was <code>357424K - 355687K = 1737K</code> </li>
<li>The legend <code>ParNew</code> indicates that the parallel collector was used in the young generation. The use of default copying collector is indicated by a legend <code>DefNew</code>, instead of<code> ParNew.</code></li>
</ul>
<p>The convention used in the verbose:gc log format is that if there's something being reported that is specific to a generation, it's preceded by the name of that generation. </p>
<p><code>[GC [gen1 info1] [gen2 info2] info]</code> <br><code>info</code> is general to GC and includes information for the young and old generation combined, <code>info&lt;n&gt;</code> is specific to <code>gen&lt;n&gt;</code>. So, attention needs to be paid to the nesting and matching of square brackets. </p>
</blockquote>
<h3><a name="t2"></a>Old Generation GC</h3>
<h4><a name="t3"></a>CMS Collector</h4>
<p>The snapshots below indicate the use of the concurrent mark-sweep collector in the old generation. As mentioned earlier in the paper, this phase is split into four phases. </p>
<p><code>513.474: [GC [1 CMS-initial-mark: 335432K(491520K)] 340897K(516096K), 0.0482491secs]</code> </p>
<ul>
<li>This is the <code>initial mark</code> phase which is stop-the-world and took 0.048 seconds. </li>
<li>The time relative to the start of the application was 513.474 seconds. </li>
<li>335432K was the size of the old generation used heap. </li>
<li>491520K was the size of the total used heap including the young generation used heap. </li>
<li>340897K was the total size of the old generation heap. </li>
<li>516096K was the total size of the heap including the young generation. </li>
<li>This phase does not recycle any memory. </li>
<li>The prefix legend <code>"[GC"</code> represents the stop-the-world phase.</li>
</ul>
<p><code>513.523: [CMS-concurrent-mark-start]</code> <br><code>514.337: [CMS-concurrent-mark: 0.814/0.814 secs]</code> <br><code>514.337: [CMS-concurrent-preclean-start]</code> <br><code>514.36: [CMS-concurrent-preclean: 0.023/0.023 secs]</code> </p>
<p>This is the concurrent mark phase which took less than a second, <code>(0.814 + 0.023) seconds,</code> however, the application runs concurrently with the GC during this time. Again, this phase does not collect any garbage. </p>
<p><code>514.361: [GC 514.361: [dirty card accumulation, 0.0072366 secs]</code><br><code>514.368: [dirty card rescan, 0.0037990 secs]</code><br><code>514.372: [remark from roots, 0.1471209 secs]</code><br><code>514.519: [weak refs processing, 0.0043200 secs] [1 CMS-remark: 335432K(491520K)] 352841K(516096K), 0.1629795 secs]</code> </p>
<ul>
<li>This is the stop-the-world <code>remark</code> phase which took about 0.162 secs. </li>
<li>335432K was the size of used heap in the old generation. </li>
<li>491520K was the total heap size of the old generation. </li>
<li>352841K was the total size of the used heap including the young generation. </li>
<li>516096K was the total size of the heap including the young generation. </li>
<li>No memory is recycled during this phase. </li>
<li>The legend <code>"[GC"</code>, as mentioned earlier, represents the stop-the-world phase.</li>
</ul>
<p><code>514.525: [CMS-concurrent-sweep-start]</code><br><code>517.692: [CMS-concurrent-sweep: 2.905/3.167 secs]</code><br><code>517.693: [CMS-concurrent-reset-start]</code> <br><code>517.766: [CMS-concurrent-reset: 0.073/0.073 secs]</code></p>
<p>This is the concurrent sweep phase which took about 3 seconds, however, application threads can run concurrently with the GC thread during this phase on a multi-processor system. Among the four CMS phases, this is the only phase when the heap is swept and collected. </p>
<h4><a name="t4"></a>Default Mark-Compact Collector</h4>
<p>If instead of the CMS collector, the default mark-compact collector is used in the old generation, the old GC snapshot would look as: </p>
<p><code>719.2: [GC 719.2: [DefNew: 20607K-&gt;20607K(24576K), 0.0000341 secs]719.2: [Tenured: 471847K-&gt;92010K(491520K), 2.6654172 secs] 492454K-&gt;92010K(516096K), 2.6658030 secs]</code> </p>
<ul>
<li><code>719.2 </code>seconds was the time relative to the start of the application at which this GC took place. </li>
<li>The legend <code>DefNew</code> indicates the use of default copying collector in the young generation. </li>
<li>The legend <code>"[GC"</code> represents a stop-the-world GC triggered by the JVM. For an old generation GC, requested by the application through the system call, <code>System.gc()</code>, the above snapshot would be prefixed by the legend <code>"Full GC"</code> </li>
<li>The total heap size of the young generation was <code>24576K.</code> </li>
<li>A young generation collection (only) was initially attempted. It was found that that collection couldn't be done because the old generation could not guarantee that it would absorb all potentially live data. As a result, only the young collection did not happen, and the young generation reported that no memory was reclaimed (notice that it all finished rather quickly, in a fraction of a millisecond). That's because nothing much happened beyond determining that the young generation collection couldn't happen: <br><code>[DefNew: 20607K-&gt;20607K(24576K), 0.0000341 secs]</code> </li>
</ul>
<p>It was then decided that a "tenured" generation collection needed to happen, (obviously), because that generation was too full to absorb promotions from the young generation, so a full mark-compact collection was done. </p>
<ul>
<li>The legend <code>Tenured</code> indicates a full mark-compact GC in the old generation. The "old generation" is sometimes referred to as "Tenured generation" </li>
<li><code>471847K</code> was the size of used heap in the old generation before GC. </li>
<li><code>92010K</code> was the size of used heap in the old generation after the GC. </li>
<li><code>491520K</code> was the total heap size of the old generation at the time of this GC. </li>
<li><code>492454K</code> was the total used heap, for young and old generations combined, before GC. </li>
<li><code>92010K</code> was the total used heap, for young and old generations combined, after GC. </li>
<li>Total garbage collected during this GC was <code>492454K - 92010K = 399837K</code> </li>
<li>516096K was the size of the total heap for the JVM. </li>
<li>2.6658030 seconds was the total time for which the application was suspended as a result of this GC.</li>
</ul>
<p><span style="BACKGROUND-COLOR: #ffff00"><br></span></p>
<p>Update&nbsp; 2009-12-10<br>JVM GC注意点：<br>CMS Old Generation是没有压缩的回收方式，所以可能导致内存碎片；内存不足/或内存快爆满时会导致Stop All World 解决：-XX:+UseCMSCompactAtFullCollection -XX:CMSInitiatingOccupancyFraction=80（设置每次回收时，压缩内存碎片，并且在年老代达到80%使用率时马上进行回收）；<br>&nbsp;&nbsp;&nbsp; 在系统空闲时可能会有较长时间的Full GC<br>&nbsp;&nbsp;&nbsp; 记得：-XX:+DisableExplicitGC? 关闭System.gc()，否则会导致Full GC<br>&nbsp;&nbsp;&nbsp; CMS回收器已经比较理想，能够将1.5G的堆FullGC时间降到平均每次50ms左右<br>&nbsp;&nbsp;&nbsp; 如果Old Generation对象不多（比如占用空间&lt;200M）使用CMS反而效率不高<br><br>JVM GC 相关总结<br>问题，总内存大小6G，Old分配2G结果FullGC时间太长，大约2S，YoungGC 0.1S<br><br>解决：1 缩小Old块大小如Old 1.5G Young 4.5G 效果FullGC变成了0.5S(但是在访问高峰期效果很不好，每次只能回收不到10%的空间，所以需要频繁FGC)，YoungGC时间不变0.1S<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2 增大Old块大小如Old 3&nbsp; G Young 3&nbsp; G 效果FullGC变成了1.3S，YoungGC时间不变0.1S<br><br>原因：每次YoungGC时存活的不到200M，也就是时间都用在复制这200M的对象身上，所以YoungGC总大小对暂停时间没有影响，只和每次YGC时，存活下来的对象的大小有关，存活的越少越快<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FullGC时，如果Old越大需要时间越长，中间需要整理；太小的话GC效率太低，每次回收回来的空间有限，需要频繁FGC。 &nbsp; <br><br><br>Update 2009-12-14<br>发现FullGC的时候Rescan使用了大量时间：<br>3036.816: [GC[YG occupancy: <span style="COLOR: #0000ff">550898</span> K (2949120 K)]3036.816: [Rescan (parallel) , <span style="BACKGROUND-COLOR: #ffff00">0.1198670</span> secs]3036.936: [weak refs processing, 0.0168150 secs]3036.953: [class unloading, 0.0566650 secs]3037.010: [scrub symbol &amp; string tables, 0.0117000 secs] [1 CMS-remark: 2211101K(3145728K)] 2761999K(6094848K), 0.2663660 secs] [Times: user=0.80 sys=0.04, real=0.26 secs] <br><br>4467.799: [GC[YG occupancy: <span style="COLOR: #0000ff">1686813</span> K (2949120 K)]4467.799: [Rescan (parallel) , <span style="BACKGROUND-COLOR: #ffff00">1.2868060</span> secs]4469.086: [weak refs processing, 0.0168640 secs]4469.103: [class unloading, 0.0521170 secs]4469.155: [scrub symbol &amp; string tables, 0.0118140 secs] [1 CMS-remark: 2205795K(3145728K)] 3892609K(6094848K), 1.4293820 secs] [Times: user=1.60 sys=0.57, real=1.43 secs] <br><br>5862.375: [GC[YG occupancy: <span style="COLOR: #0000ff">1673859 </span>K (2949120 K)]5862.375: [Rescan (parallel) , <span style="BACKGROUND-COLOR: #ffff00">1.2085060</span> secs]5863.584: [weak refs processing, 0.0157410 secs]5863.600: [class unloading, 0.0535530 secs]5863.653: [scrub symbol &amp; string tables, 0.0116760 secs] [1 CMS-remark: 2204312K(3145728K)] 3878171K(6094848K), 1.3540610 secs] [Times: user=1.54 sys=0.42, real=1.36 secs] <br><br>主要原因是这个时候Eden块使用比较多，550M的时候只需要0.12秒，1.6G就需要1.2秒了<br>解决：增加参数：-XX:+CMSScavengeBeforeRemark 指定在Remark（也就是Rescan）前强行进行一次MinorGC<br>这样FullGC的暂停时间由1.5M降到0.35秒<br><br>还尝试过使用参数：<a href="http://www.md.pp.ru/~eu/jdk6options.html#CollectGen0First"><span style="color: #96b0af;">CollectGen0First</span></a> 在FullGC前强行进行一次MinorGC，但是效果不好，主要是因为在我们的系统中从这个过程到Remark大约需要5-10秒，这段时间Eden空间开支需要差不多1.5G，所以基本没什么效果<br>Remark开始：<br>1520.719: [GC[YG occupancy: 2485901 K (2949120 K)]1520.720: [GC 1520.720: <span style="COLOR: #99cc66">[ParNew</span><br><span style="COLOR: #99cc66">Desired survivor size 100663296 bytes, new threshold 15 (max 15)</span><br><span style="COLOR: #99cc66">- age&nbsp;&nbsp; 1:&nbsp;&nbsp; 20274872 bytes,&nbsp;&nbsp; 20274872 total</span><br><span style="COLOR: #99cc66">- age&nbsp;&nbsp; 2:&nbsp;&nbsp; 15799848 bytes,&nbsp;&nbsp; 36074720 total</span><br><span style="COLOR: #99cc66">- age&nbsp;&nbsp; 3:&nbsp;&nbsp; 11308728 bytes,&nbsp;&nbsp; 47383448 total</span><br><span style="COLOR: #99cc66">- age&nbsp;&nbsp; 4:&nbsp;&nbsp;&nbsp; 7179272 bytes,&nbsp;&nbsp; 54562720 total</span><br><span style="COLOR: #99cc66">- age&nbsp;&nbsp; 5:&nbsp;&nbsp;&nbsp; 7728992 bytes,&nbsp;&nbsp; 62291712 total</span><br><span style="COLOR: #99cc66">- age&nbsp;&nbsp; 6:&nbsp;&nbsp;&nbsp; 6570360 bytes,&nbsp;&nbsp; 68862072 total</span><br><span style="COLOR: #99cc66">- age&nbsp;&nbsp; 7:&nbsp;&nbsp;&nbsp; 9366104 bytes,&nbsp;&nbsp; 78228176 total</span><br><span style="COLOR: #99cc66">- age&nbsp;&nbsp; 8:&nbsp;&nbsp;&nbsp; 6087376 bytes,&nbsp;&nbsp; 84315552 total</span><br><span style="COLOR: #99cc66">- age&nbsp;&nbsp; 9:&nbsp;&nbsp;&nbsp; 8942088 bytes,&nbsp;&nbsp; 93257640 total</span><br><span style="COLOR: #99cc66">- age&nbsp; 10:&nbsp;&nbsp;&nbsp; 6186592 bytes,&nbsp;&nbsp; 99444232 total</span><br><span style="COLOR: #99cc66">: 2485901K-&gt;152025K(2949120K), 0.1270290 secs] 4058777K-&gt;1735681K(6094848K), 0.1273970 secs</span><span style="COLOR: #0000ff">强行插入的MinorGC</span><span style="COLOR: #99cc66">]</span>&nbsp; [Times: user=0.44 sys=0.02, real=0.13 secs]<br>1520.847: [<span style="BACKGROUND-COLOR: #ffff00">Rescan (parallel) , 0.0388200 secs</span><span style="COLOR: #0000ff">时间明显减少</span>]1520.886: [weak refs processing, 0.0148430 secs]1520.901: [class unloading, 0.0561410 secs]1520.957: [scrub symbol &amp; string tables, 0.0133140 secs] [1 CMS-remark: 1583655K(3145728K)] 1735681K(6094848K), 0.3050640 secs] [Times: user=0.80 sys=0.03, real=0.30 secs]</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>/usr/local/resin/bin/httpd.sh start -Xms1024m -Xmx4048m -Xss1000k -Djava.awt.headless=true -XX:PermSize=64M -XX:MaxPermSize=256M -XX:ErrorFile=/data/mqq_data/log/jvm_error.log -XX:NewSize=256m -XX:MaxNewSize=256m&nbsp; -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=80 -XX:+DisableExplicitGC -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+PrintGCApplicationStoppedTime&nbsp;</p>
</div>




<!-- Baidu Button BEGIN -->

<div class="bdsharebuttonbox bdshare-button-style0-16" style="float: right;" data-bd-bind="1408003917365">
<a href="http://blog.csdn.net/kangojian/article/details/5289410#" class="bds_more" data-cmd="more" style="background-position:0 0 !important; background-image: url(http://bdimg.share.baidu.com/static/api/img/share/icons_0_16.png?v=d754dcc0.png) !important"></a>
<a href="http://blog.csdn.net/kangojian/article/details/5289410#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间" style="background-position:0 -52px !important"></a>
<a href="http://blog.csdn.net/kangojian/article/details/5289410#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博" style="background-position:0 -104px !important"></a>
<a href="http://blog.csdn.net/kangojian/article/details/5289410#" class="bds_tqq" data-cmd="tqq" title="分享到腾讯微博" style="background-position:0 -260px !important"></a>
<a href="http://blog.csdn.net/kangojian/article/details/5289410#" class="bds_renren" data-cmd="renren" title="分享到人人网" style="background-position:0 -208px !important"></a>
<a href="http://blog.csdn.net/kangojian/article/details/5289410#" class="bds_weixin" data-cmd="weixin" title="分享到微信" style="background-position:0 -1612px !important"></a>
</div>
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];</script>
<!-- Baidu Button END -->

<!--192.168.100.35-->
<ul class="article_next_prev">
            <li class="prev_article"><span onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_shangyipian&#39;]);location.href=&#39;/kangojian/article/details/5266721&#39;;">上一篇</span><a href="http://blog.csdn.net/kangojian/article/details/5266721" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_shangyipian&#39;])">Java 的缓存的实质</a></li>
            <li class="next_article"><span onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_xiayipian&#39;]);location.href=&#39;/kangojian/article/details/5302677&#39;;">下一篇</span><a href="http://blog.csdn.net/kangojian/article/details/5302677" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_xiayipian&#39;])">Hibernate的锁机制</a></li>
</ul>

<!-- Baidu Button BEGIN -->
<script type="text/javascript" id="bdshare_js" data="type=tools&amp;uid=1536434" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/bds_s_v2.js"></script>

<script type="text/javascript">
    document.getElementById("bdshell_js").src = "http://bdimg.share.baidu.com/static/js/shell_v2.js?cdnversion=" + Math.ceil(new Date()/3600000)
</script>
<!-- Baidu Button END -->


</div>
      <dl class="blog-associat-tag">
        <dt>主题推荐</dt>
        <dd>
                <a href="http://www.csdn.net/tag/%E6%80%A7%E8%83%BD" target="_blank" class="blog-tage-red">性能</a> 
                <a href="http://www.csdn.net/tag/jvm" target="_blank" class="blog-tage-red">jvm</a> 
                <a href="http://www.csdn.net/tag/performance" target="_blank" class="blog-tage-red">performance</a> 
                <a href="http://www.csdn.net/tag/something" target="_blank" class="blog-tage-red">something</a> 
                <a href="http://www.csdn.net/tag/%E4%B8%AD%E7%A7%BB%E5%8A%A8" target="_blank" class="blog-tage-red">中移动</a> 
        </dd>
    </dl> 


<dl class="blog-ass-articl tracking-ad" data-mod="popu_36" id="res-relatived"> 
     <dt><span>猜你在找</span></dt>    
<dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;"><a href="http://blog.csdn.net/jollyjumper/article/details/17803145" title="Lucene中fieldNorm的精度问题" strategy="CFRecommendAlgorithm" target="_blank">Lucene中fieldNorm的精度问题</a></dd><dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;"><a href="http://blog.csdn.net/mazhimazh/article/details/17684701" title="Java 7之基础类型第3篇 - Java整数类型（2）" strategy="CFRecommendAlgorithm" target="_blank">Java 7之基础类型第3篇 - Java整数类型（2）</a></dd><dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;"><a href="http://blog.csdn.net/u011896140/article/details/14449747" title="sublime text 3 浏览器预览html" strategy="CFRecommendAlgorithm" target="_blank">sublime text 3 浏览器预览html</a></dd><dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;"><a href="http://blog.csdn.net/shootyou/article/details/4109862" title="LinkedHashMap实现一个固定容量的基于最近最少使用算法的缓存类" strategy="CFRecommendAlgorithm" target="_blank">LinkedHashMap实现一个固定容量的基于最近最少使用算法的缓存类</a></dd><dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;"><a href="http://blog.csdn.net/Wentasy/article/details/13168569" title="MySQL AB复制" strategy="CFRecommendAlgorithm" target="_blank">MySQL AB复制</a></dd><dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;"><a href="http://blog.csdn.net/xuing/article/details/6749566" title="使用HTML5的CANVAS控件绘制GPS状态屏" strategy="CFRecommendAlgorithm" target="_blank">使用HTML5的CANVAS控件绘制GPS状态屏</a></dd><dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;"><a href="http://blog.csdn.net/WangXiuli_Girl/article/details/24704397" title="MySQL备份恢复之XtraBackup" strategy="CFRecommendAlgorithm" target="_blank">MySQL备份恢复之XtraBackup</a></dd><dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;"><a href="http://blog.csdn.net/dacainiao007/article/details/8333093" title="第三天：手机归属地" strategy="CFRecommendAlgorithm" target="_blank">第三天：手机归属地</a></dd><dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;"><a href="http://blog.csdn.net/happylee6688/article/details/8032324" title="一个有趣的CSS实例——模拟Google公司Logo" strategy="CFRecommendAlgorithm" target="_blank">一个有趣的CSS实例——模拟Google公司Logo</a></dd><dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;"><a href="http://blog.csdn.net/leihengxin/article/details/7851874" title="Android开发—数据库应用—添加列表活动（ListActivity）--分析记事本程序" strategy="CFRecommendAlgorithm" target="_blank">Android开发—数据库应用—添加列表活动（ListActivity）--分析记事本程序</a></dd></dl>

<script type="text/javascript">
    var searchtitletags = 'JVM 垃圾回收机制及性能调优案列  ' + ',' + '性能,jvm,performance,something,中移动';
    searchService({
        index: 'blog',
        query: searchtitletags,
        from: 10,
        size: 10,
        appendTo: '#res-relatived',
        url: 'recommend',
        his: 2,
        client: "blog_cf_enhance",
        tmpl: '<dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;"><a href="#{ url }" title="#{ title }" strategy="#{ strategy }">#{ title }</a></dd>'
    });

 </script>   


    <div id="ad_cen">
   
          <script type="text/javascript">
              new Ad(4, 'ad_cen');
          </script>
    <iframe id="ad_frm_0" frameborder="0" scrolling="no" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/ad(1).htm" style="border-width: 0px; overflow: hidden; width: 746px; height: 90px;"></iframe></div>
<div class="comment_class">
    <div id="comment_title" class="panel_head">
        <span class="see_comment">查看评论</span><a name="comments"></a></div>
    <div id="comment_list"><br>&nbsp;&nbsp;暂无评论<br><br><div class="clear"></div></div>
    <div id="comment_bar">
    </div>
    <div id="comment_form"><div class="guest_link">您还没有登录,请<a href="javascript:void(0);" onclick="javascript:csdn.showLogin(function (dat) {js_logined(dat.data.userName);});">[登录]</a>或<a href="http://passport.csdn.net/account/register?from=http%3A%2F%2Fblog.csdn.net%2Fkangojian%2Farticle%2Fdetails%2F5289410">[注册]</a></div></div>

    <div class="announce">
        * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场<a name="reply"></a><a name="quote"></a></div>
</div>

<script type="text/javascript">
    var fileName = '5289410';
    var commentscount = 0;
    var islock = false
</script>
<script type="text/javascript" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/comment.js"></script>
    <div id="ad_bot">
    <iframe id="ad_frm_1" frameborder="0" scrolling="no" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/ad(2).htm" style="border-width: 0px; overflow: hidden; width: 746px; height: 0px;"></iframe></div>
    <script type="text/javascript">
    new Ad(5, 'ad_bot');
    </script>
<div id="report_dialog">
</div>

<div id="d-top" style="bottom:60px;">
      

       <a id="quick-reply" class="btn btn-top q-reply" title="快速回复" style="display:none;">
            <img src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/blog-icon-reply.png" alt="快速回复">
        </a>    

    <a id="d-top-a" class="btn btn-top backtop" style="display: block;" title="返回顶部" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_huidaodingbu&#39;])">         
         <img src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/top.png" alt="TOP">
    </a>
</div>
<script type="text/javascript">
    $(function ()
    {
        $("#ad_frm_0").height("90px");

        if($("#comment_content").length>0)
        {
            $("#quick-reply").show();

            $("#quick-reply").click(function(){
                setEditorFocus();
            });
        }       
     
        var d_top = $('#d-top-a');
        document.onscroll = function ()
        {
            var scrTop = (document.body.scrollTop || document.documentElement.scrollTop);
            if (scrTop > 500)
            {
                d_top.show();
            } else
            {
                d_top.hide();
            }
        }
        $('#d-top-a').click(function ()
        {
            scrollTo(0, 0);
            this.blur();
            return false;
        });
    });
  
</script>
<style type="text/css">
    .tag_list
    {
        background: none repeat scroll 0 0 #FFFFFF;
        border: 1px solid #D7CBC1;
        color: #000000;
        font-size: 12px;
        line-height: 20px;
        list-style: none outside none;
        margin: 10px 2% 0 1%;
        padding: 1px;
    }
    .tag_list h5
    {
        background: none repeat scroll 0 0 #E0DBD3;
        color: #47381C;
        font-size: 12px;
        height: 24px;
        line-height: 24px;
        padding: 0 5px;
        margin: 0;
    }
    .tag_list h5 a
    {
        color: #47381C;
    }
    .classify
    {
        margin: 10px 0;
        padding: 4px 12px 8px;
    }
    .classify a
    {
        margin-right: 20px;
        white-space: nowrap;
    }
</style>
<div class="tag_list">
    <h5>
        <a href="http://www.csdn.net/tag/" target="_blank">核心技术类目</a></h5>
    <div class="classify">
<a title="全部主题" href="http://www.csdn.net/tag" target="_blank" onclick="LogClickCount(this,336);">全部主题</a>
<a title="Hadoop" href="http://g.csdn.net/5272865" target="_blank" onclick="LogClickCount(this,336);">Hadoop</a>
<a title="AWS" href="http://g.csdn.net/5272866" target="_blank" onclick="LogClickCount(this,336);">AWS</a>
<a title="移动游戏" href="http://g.csdn.net/5272870" target="_blank" onclick="LogClickCount(this,336);">移动游戏</a>
<a title="Java" href="http://g.csdn.net/5272871" target="_blank" onclick="LogClickCount(this,336);">Java</a>
<a title="Android" href="http://g.csdn.net/5272872" target="_blank" onclick="LogClickCount(this,336);">Android</a>
<a title="iOS" href="http://g.csdn.net/5272873" target="_blank" onclick="LogClickCount(this,336);">iOS</a>
<a title="Swift" href="http://g.csdn.net/5272868" target="_blank" onclick="LogClickCount(this,336);">Swift</a>
<a title="智能硬件" href="http://g.csdn.net/5272869" target="_blank" onclick="LogClickCount(this,336);">智能硬件</a>
<a title="Docker" href="http://g.csdn.net/5272867" target="_blank" onclick="LogClickCount(this,336);">Docker</a>
<a title="OpenStack" href="http://g.csdn.net/5272925" target="_blank" onclick="LogClickCount(this,336);">OpenStack</a>
<a title="VPN" href="http://www.csdn.net/tag/vpn" target="_blank" onclick="LogClickCount(this,336);">VPN</a>
<a title="Spark" href="http://g.csdn.net/5272924" target="_blank" onclick="LogClickCount(this,336);">Spark</a>
<a title="ERP" href="http://www.csdn.net/tag/erp" target="_blank" onclick="LogClickCount(this,336);">ERP</a>
<a title="IE10" href="http://www.csdn.net/tag/ie10" target="_blank" onclick="LogClickCount(this,336);">IE10</a>
<a title="Eclipse" href="http://www.csdn.net/tag/eclipse" target="_blank" onclick="LogClickCount(this,336);">Eclipse</a>
<a title="CRM" href="http://www.csdn.net/tag/crm" target="_blank" onclick="LogClickCount(this,336);">CRM</a>
<a title="JavaScript" href="http://www.csdn.net/tag/javascript" target="_blank" onclick="LogClickCount(this,336);">JavaScript</a>
<a title="数据库" href="http://www.csdn.net/tag/%E6%95%B0%E6%8D%AE%E5%BA%93" target="_blank" onclick="LogClickCount(this,336);">数据库</a>
<a title="Ubuntu" href="http://www.csdn.net/tag/ubuntu" target="_blank" onclick="LogClickCount(this,336);">Ubuntu</a>
<a title="NFC" href="http://www.csdn.net/tag/nfc" target="_blank" onclick="LogClickCount(this,336);">NFC</a>
<a title="WAP" href="http://www.csdn.net/tag/wap" target="_blank" onclick="LogClickCount(this,336);">WAP</a>
<a title="jQuery" href="http://www.csdn.net/tag/jquery" target="_blank" onclick="LogClickCount(this,336);">jQuery</a>
<a title="BI" href="http://www.csdn.net/tag/bi" target="_blank" onclick="LogClickCount(this,336);">BI</a>
<a title="HTML5" href="http://www.csdn.net/tag/html5" target="_blank" onclick="LogClickCount(this,336);">HTML5</a>
<a title="Spring" href="http://www.csdn.net/tag/spring" target="_blank" onclick="LogClickCount(this,336);">Spring</a>
<a title="Apache" href="http://www.csdn.net/tag/apache" target="_blank" onclick="LogClickCount(this,336);">Apache</a>
<a title=".NET" href="http://www.csdn.net/tag/.net" target="_blank" onclick="LogClickCount(this,336);">.NET</a>
<a title="API" href="http://www.csdn.net/tag/api" target="_blank" onclick="LogClickCount(this,336);">API</a>
<a title="HTML" href="http://www.csdn.net/tag/html" target="_blank" onclick="LogClickCount(this,336);">HTML</a>
<a title="SDK" href="http://www.csdn.net/tag/sdk" target="_blank" onclick="LogClickCount(this,336);">SDK</a>
<a title="IIS" href="http://www.csdn.net/tag/iis" target="_blank" onclick="LogClickCount(this,336);">IIS</a>
<a title="Fedora" href="http://www.csdn.net/tag/fedora" target="_blank" onclick="LogClickCount(this,336);">Fedora</a>
<a title="XML" href="http://www.csdn.net/tag/xml" target="_blank" onclick="LogClickCount(this,336);">XML</a>
<a title="LBS" href="http://www.csdn.net/tag/lbs" target="_blank" onclick="LogClickCount(this,336);">LBS</a>
<a title="Unity" href="http://www.csdn.net/tag/unity" target="_blank" onclick="LogClickCount(this,336);">Unity</a>
<a title="Splashtop" href="http://www.csdn.net/tag/splashtop" target="_blank" onclick="LogClickCount(this,336);">Splashtop</a>
<a title="UML" href="http://www.csdn.net/tag/uml" target="_blank" onclick="LogClickCount(this,336);">UML</a>
<a title="components" href="http://www.csdn.net/tag/components" target="_blank" onclick="LogClickCount(this,336);">components</a>
<a title="Windows Mobile" href="http://www.csdn.net/tag/windowsmobile" target="_blank" onclick="LogClickCount(this,336);">Windows Mobile</a>
<a title="Rails" href="http://www.csdn.net/tag/rails" target="_blank" onclick="LogClickCount(this,336);">Rails</a>
<a title="QEMU" href="http://www.csdn.net/tag/qemu" target="_blank" onclick="LogClickCount(this,336);">QEMU</a>
<a title="KDE" href="http://www.csdn.net/tag/kde" target="_blank" onclick="LogClickCount(this,336);">KDE</a>
<a title="Cassandra" href="http://www.csdn.net/tag/cassandra" target="_blank" onclick="LogClickCount(this,336);">Cassandra</a>
<a title="CloudStack" href="http://www.csdn.net/tag/cloudstack" target="_blank" onclick="LogClickCount(this,336);">CloudStack</a>
<a title="FTC" href="http://www.csdn.net/tag/ftc" target="_blank" onclick="LogClickCount(this,336);">FTC</a>
<a title="coremail" href="http://www.csdn.net/tag/coremail" target="_blank" onclick="LogClickCount(this,336);">coremail</a>
<a title="OPhone " href="http://www.csdn.net/tag/ophone" target="_blank" onclick="LogClickCount(this,336);">OPhone </a>
<a title="CouchBase" href="http://www.csdn.net/tag/couchbase" target="_blank" onclick="LogClickCount(this,336);">CouchBase</a>
<a title="云计算" href="http://www.csdn.net/tag/%E4%BA%91%E8%AE%A1%E7%AE%97" target="_blank" onclick="LogClickCount(this,336);">云计算</a>
<a title="iOS6" href="http://www.csdn.net/tag/iOS6" target="_blank" onclick="LogClickCount(this,336);">iOS6</a>
<a title="Rackspace " href="http://www.csdn.net/tag/rackspace" target="_blank" onclick="LogClickCount(this,336);">Rackspace </a>
<a title="Web App" href="http://www.csdn.net/tag/webapp" target="_blank" onclick="LogClickCount(this,336);">Web App</a>
<a title="SpringSide" href="http://www.csdn.net/tag/springside" target="_blank" onclick="LogClickCount(this,336);">SpringSide</a>
<a title="Maemo" href="http://www.csdn.net/tag/maemo" target="_blank" onclick="LogClickCount(this,336);">Maemo</a>
<a title="Compuware" href="http://www.csdn.net/tag/compuware" target="_blank" onclick="LogClickCount(this,336);">Compuware</a>
<a title="大数据" href="http://www.csdn.net/tag/%E5%A4%A7%E6%95%B0%E6%8D%AE" target="_blank" onclick="LogClickCount(this,336);">大数据</a>
<a title="aptech" href="http://www.csdn.net/tag/aptech" target="_blank" onclick="LogClickCount(this,336);">aptech</a>
<a title="Perl" href="http://www.csdn.net/tag/perl" target="_blank" onclick="LogClickCount(this,336);">Perl</a>
<a title="Tornado" href="http://www.csdn.net/tag/tornado" target="_blank" onclick="LogClickCount(this,336);">Tornado</a>
<a title="Ruby" href="http://www.csdn.net/tag/ruby" target="_blank" onclick="LogClickCount(this,336);">Ruby</a>
<a title="Hibernate" href="http://www.csdn.net/hibernate" target="_blank" onclick="LogClickCount(this,336);">Hibernate</a>
<a title="ThinkPHP" href="http://www.csdn.net/tag/thinkphp" target="_blank" onclick="LogClickCount(this,336);">ThinkPHP</a>
<a title="HBase" href="http://www.csdn.net/tag/hbase" target="_blank" onclick="LogClickCount(this,336);">HBase</a>
<a title="Pure" href="http://www.csdn.net/tag/pure" target="_blank" onclick="LogClickCount(this,336);">Pure</a>
<a title="Solr" href="http://www.csdn.net/tag/solr" target="_blank" onclick="LogClickCount(this,336);">Solr</a>
<a title="Angular" href="http://www.csdn.net/tag/angular" target="_blank" onclick="LogClickCount(this,336);">Angular</a>
<a title="Cloud Foundry" href="http://www.csdn.net/tag/cloudfoundry" target="_blank" onclick="LogClickCount(this,336);">Cloud Foundry</a>
<a title="Redis" href="http://www.csdn.net/tag/redis" target="_blank" onclick="LogClickCount(this,336);">Redis</a>
<a title="Scala" href="http://www.csdn.net/tag/scala" target="_blank" onclick="LogClickCount(this,336);">Scala</a>
<a title="Django" href="http://www.csdn.net/tag/django" target="_blank" onclick="LogClickCount(this,336);">Django</a>
<a title="Bootstrap" href="http://www.csdn.net/tag/bootstrap" target="_blank" onclick="LogClickCount(this,336);">Bootstrap</a>
    </div>
</div>

                        <div class="clear">
                        </div>
                    </div>                   
                
            </div>
            <div id="side">
    <div class="side">
<div id="panel_Profile" class="panel">
<ul class="panel_head"><span>个人资料</span></ul>
<ul class="panel_body profile">
<div id="blog_userface">
    <a href="http://my.csdn.net/kangojian" target="_blank">
    <img src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/1_kangojian.jpg" title="访问我的空间" style="max-width:90%">
    </a>
    <br>
    <span><a href="http://my.csdn.net/kangojian" class="user_name" target="_blank">kangojian</a></span>
</div>
<div class="interact">
<a href="javascript:void(0);" class="attent" id="span_add_follow" title="[加关注]" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_guanzhu&#39;])"></a>
<a href="javascript:void(0);" class="letter" onclick="loginto(1)" title="[发私信]"></a>
</div>
<div id="blog_medal">
<div id="bms_box"></div></div>
<ul id="blog_rank">
    <li>访问：<span>205609次</span></li>
    <li>积分：<span>3593分</span></li>
    <li>排名：<span>第2578名</span></li>
</ul>
<ul id="blog_statistics">
    <li>原创：<span>129篇</span></li>
    <li>转载：<span>111篇</span></li>
    <li>译文：<span>3篇</span></li>
    <li>评论：<span>51条</span></li>
</ul>
</ul>
</div>


<div class="panel" id="panel_Search">
    <ul class="panel_head"><span>文章搜索</span></ul>
    <ul class="panel_body">
        <form id="frmSearch" action="http://so.csdn.net/search" class="form_search" target="_blank">
        <span><input id="inputSearch" type="text" class="blogsearch" title="请输入关键字"></span>
        <input id="btnSubmit" type="button" value="搜索" title="search in blog">
        <input type="hidden" name="q" id="inputQ">
        <input type="hidden" name="t" value="blog">
        <a id="btnSearchBlog" target="_blank"></a>
        </form>
    </ul>
</div>

<script type="text/javascript">
    $(function () {
        $("#btnSubmit").click(function () {           
            search();
        });

        $("#frmSearch").submit(function () {
            search();
            return false;
        });

        function search()
        {
            var url = "http://so.csdn.net/so/search/s.do?q=" + encodeURIComponent($("#inputSearch").val()) + "&u=" + username + "&t=blog";
            window.location.href = url;
        }   
    });
</script><div id="panel_Category" class="panel">
<ul class="panel_head"><span>文章分类</span></ul>
<ul class="panel_body">
             <li>
                <a href="http://blog.csdn.net/kangojian/article/category/496276" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">Apache</a><span>(16)</span>
            </li>
             <li>
                <a href="http://blog.csdn.net/kangojian/article/category/502638" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">java Spider</a><span>(2)</span>
            </li>
             <li>
                <a href="http://blog.csdn.net/kangojian/article/category/509900" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">java 算法</a><span>(13)</span>
            </li>
             <li>
                <a href="http://blog.csdn.net/kangojian/article/category/496279" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">javaAPI</a><span>(65)</span>
            </li>
             <li>
                <a href="http://blog.csdn.net/kangojian/article/category/496277" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">Js</a><span>(1)</span>
            </li>
             <li>
                <a href="http://blog.csdn.net/kangojian/article/category/583377" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">Linux</a><span>(3)</span>
            </li>
             <li>
                <a href="http://blog.csdn.net/kangojian/article/category/496278" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">Luncece</a><span>(1)</span>
            </li>
             <li>
                <a href="http://blog.csdn.net/kangojian/article/category/502640" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">luncece</a><span>(1)</span>
            </li>
             <li>
                <a href="http://blog.csdn.net/kangojian/article/category/496281" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">mysql</a><span>(25)</span>
            </li>
             <li>
                <a href="http://blog.csdn.net/kangojian/article/category/496280" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">spring</a><span>(12)</span>
            </li>
             <li>
                <a href="http://blog.csdn.net/kangojian/article/category/702233" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">数据层</a><span>(4)</span>
            </li>
             <li>
                <a href="http://blog.csdn.net/kangojian/article/category/567162" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">杂谈</a><span>(19)</span>
            </li>
             <li>
                <a href="http://blog.csdn.net/kangojian/article/category/683710" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">设计模式</a><span>(4)</span>
            </li>
</ul>
</div><div id="panel_Archive" class="panel">
<ul class="panel_head"><span>文章存档</span></ul>
<ul class="panel_body">
<div id="archive_list"><li><a href="http://blog.csdn.net/kangojian/article/month/2014/06">2014年06月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2013/06">2013年06月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2013/05">2013年05月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2013/04">2013年04月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2012/11">2012年11月</a><span>(1)</span></li><span class="hidelist" style="display:none;"><li><a href="http://blog.csdn.net/kangojian/article/month/2012/10">2012年10月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2012/09">2012年09月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2012/03">2012年03月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2012/02">2012年02月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2012/01">2012年01月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2011/11">2011年11月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2011/10">2011年10月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2011/09">2011年09月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2011/08">2011年08月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2011/05">2011年05月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2011/04">2011年04月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2011/03">2011年03月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2011/02">2011年02月</a><span>(8)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2011/01">2011年01月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2010/12">2010年12月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2010/11">2010年11月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2010/10">2010年10月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2010/08">2010年08月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2010/07">2010年07月</a><span>(16)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2010/06">2010年06月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2010/05">2010年05月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2010/04">2010年04月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2010/03">2010年03月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2010/02">2010年02月</a><span>(7)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2010/01">2010年01月</a><span>(7)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2009/12">2009年12月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2009/11">2009年11月</a><span>(10)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2009/10">2009年10月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2009/09">2009年09月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2009/08">2009年08月</a><span>(8)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2009/07">2009年07月</a><span>(7)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2009/06">2009年06月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2009/05">2009年05月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2009/04">2009年04月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2009/03">2009年03月</a><span>(11)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2009/02">2009年02月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2009/01">2009年01月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2008/12">2008年12月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2008/11">2008年11月</a><span>(11)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2008/10">2008年10月</a><span>(9)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2008/09">2008年09月</a><span>(8)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2008/08">2008年08月</a><span>(6)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2008/07">2008年07月</a><span>(6)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2008/06">2008年06月</a><span>(10)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2008/05">2008年05月</a><span>(11)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2008/04">2008年04月</a><span>(7)</span></li><li><a href="http://blog.csdn.net/kangojian/article/month/2008/03">2008年03月</a><span>(5)</span></li></span><div id="archive_list_button" class="list_closed">展开</div></div>
</ul>
</div>
<div id="hotarticls" class="panel">
<ul class="panel_head">
    <span>       
阅读排行    </span>
</ul>

<ul class="panel_body itemlist">
<li>
<a href="http://blog.csdn.net/kangojian/article/details/3122483" title="•Oracle 9i企业版官方下载 9.2.0.1.0 ">•Oracle 9i企业版官方下载 9.2.0.1.0 </a><span>(10486)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/5266714" title="JAVA缓存">JAVA缓存</a><span>(9263)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/2801200" title="mysql  #1349 - View&#39;s SELECT contains a subquery in the FROM clause  错误">mysql  #1349 - View's SELECT contains a subquery in the FROM clause  错误</a><span>(7303)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/2991316" title="java 超简单 生成json与解析">java 超简单 生成json与解析</a><span>(5048)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/5444012" title="java面试题之用最有效率的方法算出2乘以8等於几">java面试题之用最有效率的方法算出2乘以8等於几</a><span>(4640)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/3216884" title="Java中的invoke使用">Java中的invoke使用</a><span>(4487)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/5955677" title="java 内存监控使用">java 内存监控使用</a><span>(3677)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/5736924" title="Mina 解决请求后直接关闭连接">Mina 解决请求后直接关闭连接</a><span>(3422)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/3238699" title="spring配置文件详解">spring配置文件详解</a><span>(3418)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/6898372" title="Redis与Memcached的区别">Redis与Memcached的区别</a><span>(3061)</span>
</li>
</ul>
</div>
<div id="hotarticls2" class="panel">
<ul class="panel_head"><span>评论排行</span></ul>
<ul class="panel_body itemlist">
<li>
<a href="http://blog.csdn.net/kangojian/article/details/6207464" title="网页快照 java 实现">网页快照 java 实现</a><span>(7)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/5711358" title="java nio Selector的使用－客户端">java nio Selector的使用－客户端</a><span>(5)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/3216884" title="Java中的invoke使用">Java中的invoke使用</a><span>(5)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/3410763" title="Ext（一） 登录+验证码">Ext（一） 登录+验证码</a><span>(5)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/3122483" title="•Oracle 9i企业版官方下载 9.2.0.1.0 ">•Oracle 9i企业版官方下载 9.2.0.1.0 </a><span>(5)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/5444012" title="java面试题之用最有效率的方法算出2乘以8等於几">java面试题之用最有效率的方法算出2乘以8等於几</a><span>(3)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/5266721" title="Java 的缓存的实质">Java 的缓存的实质</a><span>(3)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/2801200" title="mysql  #1349 - View&#39;s SELECT contains a subquery in the FROM clause  错误">mysql  #1349 - View's SELECT contains a subquery in the FROM clause  错误</a><span>(2)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/6780305" title="Java 分布式事务（多数据源）">Java 分布式事务（多数据源）</a><span>(2)</span>
</li>
<li>
<a href="http://blog.csdn.net/kangojian/article/details/2341424" title="Java线程join()方法的用处">Java线程join()方法的用处</a><span>(2)</span>
</li>
</ul>
</div>
<div id="homepageArticles" class="panel tracking-ad" data-mod="popu_4">
<ul class="panel_head"><span>推荐文章</span></ul>
<ul class="panel_body" id="ad_commend"><iframe id="ad_frm_2" frameborder="0" scrolling="no" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/ad.htm" style="border-width: 0px; overflow: hidden; width: 182px; height: 0px;"></iframe></ul>
</div>
<script type="text/javascript">
 new Ad(12, 'ad_commend');
</script><div id="newcomments" class="panel">
<ul class="panel_head"><span>最新评论</span></ul>
<ul class="panel_body itemlist">
    <li>
   
         <a href="http://blog.csdn.net/kangojian/article/details/5266721#comments">Java 的缓存的实质</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/aqingtian005" class="user_name">aqingtian005</a>:
lz在扯蛋
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/kangojian/article/details/6274578#comments">java url 加密和隐藏域</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/yinhongxi520" class="user_name">yinhongxi520</a>:
看不懂
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/kangojian/article/details/5736924#comments">Mina 解决请求后直接关闭连接</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/liuyuhua0066" class="user_name">liuyuhua0066</a>:
setSoLinger(0) 未处理完的数据会丢失，这个你们不需要考虑么？
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/kangojian/article/details/5323573#comments">java 透明图片</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/x646602196" class="user_name">x646602196</a>:
给力 ，， 赞一个
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/kangojian/article/details/5323573#comments">Java 的缓存的实质</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/hanlin10728" class="user_name">hanlin10728</a>:
请问楼主对于该文中的缓存信息，如果缓存信息是从数据库获取，且当数据库中的数据发生变化时如何实时更新改...
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/kangojian/article/details/5709979#comments">java nio 非阻塞要点 Selector（一）</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/lxgwm2008" class="user_name">lxgwm2008</a>:
能说一下原因吗？
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/kangojian/article/details/6780305#comments">Java 分布式事务（多数据源）</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/heishiJJ" class="user_name">heishiJJ</a>:
楼主，我可以负责任告诉你“formatId可以理解为一个全局事务的ID”是错的，XID提供三个序列，...
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/kangojian/article/details/2801200#comments">mysql  #1349 - View's SELECT contains a subquery in the FROM clause  错误</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/stzy00" class="user_name">stzy00</a>:
啊哈 谢谢分享。
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/kangojian/article/details/2801200#comments">Java 的缓存的实质</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/wm5920" class="user_name">wuming5920</a>:
nice
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/kangojian/article/details/3122483#comments">•Oracle 9i企业版官方下载 9.2.0.1.0 </a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/liying426" class="user_name">liying426</a>:
地址不能用了,求最新的阿,官网也没找到,
    </p>
    </li>
</ul>
</div>
    </div>
    <div class="clear">
    </div>
</div>

            <div class="clear">
            </div>
        </div>
        

<script type="text/javascript" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/cnick.js"></script>
<script type="text/javascript" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/newblog.min.js"></script>


<script type="text/javascript" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/showblogmedal.ashx"></script>
<script type="text/javascript">
    document.write('<script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/publib_footer.js?' + Math.floor(new Date() / 120000).toString(36) + '="></' + 'script>');
</script><script type="text/javascript" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/publib_footer.js"></script><link rel="stylesheet" type="text/css" href="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/pub_footer_2012.css"><div id="pub_footerall" class="pub_footerall"><dl><dt></dt> <dd><a href="http://www.csdn.net/company/about.html" target="_blank">公司简介</a>|<a href="http://www.csdn.net/company/recruit.html" target="_blank">招贤纳士</a>|<a href="http://www.csdn.net/company/marketing.html" target="_blank">广告服务</a>|<a href="http://www.csdn.net/company/account.html" target="_blank">银行汇款帐号</a>|<a href="http://www.csdn.net/company/contact.html" target="_blank">联系方式</a>|<a href="http://www.csdn.net/company/statement.html" target="_blank">版权声明</a>|<a href="http://www.csdn.net/company/layer.html" target="_blank">法律顾问</a>|<a href="mailto:webmaster@csdn.net">问题报告</a>|<a target="_blank" href="http://www.csdn.net/friendlink.html">合作伙伴</a>|<a href="http://bbs.csdn.net/forums/Service" target="_blank">论坛反馈</a></dd><dd><a href="http://wpa.qq.com/msgrd?v=3&uin=2355263776&site=qq&menu=yes" target="_blank" class="qq">网站客服</a> <a href="http://wpa.qq.com/msgrd?v=3&uin=2251809102&site=qq&menu=yes" target="_blank" class="qq">杂志客服</a> <a href="http://e.weibo.com/csdnsupport/profile" target="_blank" class="weibo">微博客服</a> <a href="mailto:webmaster@csdn.net" class="email" title="联系邮箱">webmaster@csdn.net</a> <span class="phone" title="服务热线">400-600-2320</span></dd><dd>京&nbsp;ICP&nbsp;证&nbsp;070598&nbsp;号</dd><dd>北京创新乐知信息技术有限公司 版权所有</dd><dd>江苏乐知网络技术有限公司 提供商务支持</dd><dd>Copyright © 1999-2014, CSDN.NET, All Rights Reserved&nbsp;<a href="http://www.hd315.gov.cn/beian/view.asp?bianhao=010202001032100010" target="_blank"><img src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/gongshang_logos.gif" alt="GongshangLogo" title=""></a></dd></dl></div><div id="note1" class="csdn_note" style="display:none; position:absolute; z-index:9999; width:440px">  <span class="notice_top_arrow"><span class="inner"></span></span>  <div class="box"></div></div><div class="csdn_notice_tip" style="display: none; position: absolute; z-index: 9990; width: 170px;">  <iframe src="about:blank" frameborder="0" scrolling="no" style="z-index:-1;position:absolute;top:0;left:0;width:100%;height:100%;background:transparent"></iframe>  <div class="tip_text">您有<strong>0</strong>条新通知</div>  <a href="javascript:void 0" class="close2"></a></div><script id="noticeScript" type="text/javascript" btnid="header_notice_num" wrapid="note1" count="5" subcount="5" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/notify.js"></script>
    <script type="text/javascript" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/login.js"></script>
<script type="text/javascript">document.write("<img src=http://counter.csdn.net/pv.aspx?id=24 border=0 width=0 height=0>");</script><img src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/pv.aspx" border="0" width="0" height="0">
<script type="text/javascript" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/counter.js"></script><script type="text/javascript" charset="UTF-8" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/msg.popup.js"></script>
<script type="text/javascript" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/ad-blog.js"></script><script type="text/javascript" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/ad-ms938.js"></script>

<script type="text/javascript" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/count.js"></script><iframe src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/logs.htm" frameborder="0" width="0" height="0"></iframe>
<script type="text/javascript">
    $(function () {
        function __get_code_toolbar(snippet_id) {
            return $("<a href='https://code.csdn.net/snippets/"
                    + snippet_id
                    + "' target='_blank' title='在CODE上查看代码片' style='text-indent:0;'><img src='https://code.csdn.net/assets/CODE_ico.png' width=12 height=12 alt='在CODE上查看代码片' style='position:relative;top:1px;left:2px;'/></a>"
                    + "<a href='https://code.csdn.net/snippets/"
                    + snippet_id
                    + "/fork' target='_blank' title='派生到我的代码片'  style='text-indent:0;'><img src='https://code.csdn.net/assets/ico_fork.svg' width=12 height=12 alt='派生到我的代码片' style='position:relative;top:2px;left:2px;'/></a>");
        }
        
        $("[code_snippet_id]").each(function () {
            __s_id = $(this).attr("code_snippet_id");
            if (__s_id != null && __s_id != "" && __s_id != 0 && parseInt(__s_id) > 70020) {
                __code_tool = __get_code_toolbar(__s_id);
                $(this).prev().find(".tools").append(__code_tool);
            }
        });
    });
</script>

    </div>
      <!--new top-->
    
    <script id="csdn-toolbar-id" btnid="header_notice_num" wrapid="note1" count="5" subcount="5" type="text/javascript" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/toolbar.js"></script>
     <!--new top-->


<div id="tag-suggest-pop">
  <div class="relative">
    <div class="close"></div>
    <div class="content"></div>
  </div>
</div><iframe src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/langchao-database-homepage-zhiding-banner-960-90-25k.htm" style="width: 1px; height: 1px; position: absolute; visibility: hidden;"></iframe><link href="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/message_pop.css" rel="stylesheet" type="text/css"><div id="_popup_msg_container" style="display: block;">

<div wistate="max" id="im_popupWindow_miniMsg" class="im_popupWindow" style="display: none; height: 0px;">
	<h6 class="wi_draggable"><span>经典资源下载一周推荐</span><a onclick="_message_tips_pop(&#39;down&#39;);return false;"><img alt="close" class="founctionpic3" src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/pic_close.gif"></a></h6>
    <div id="im_popupWindow_miniMsgContent" class="wi_content">
		<style type="text/css">
<!--
	#im2009 { position:relative; width:280px;  background-color:#FEF9F5; overflow:hidden;}
	#im2009 UL{ width:100%;  float:left; margin-left:0; padding:5px 10px; overflow:hidden;}
        .blue { line-height:120%;}
	.blue A:link { color:#100cff; text-decoration:none;}
	.blue A:visited { color:#100cff; text-decoration:none;}
	.blue A:active { color:#100cff; text-decoration:none;}
	.blue A:hover { color:#100cff; text-decoration:none;}
	
	.bottom { margin-bottom:0px; height:40px; padding:5px}
	.bottom A:link { color:#FF9900; text-decoration:none; font-size:12px;}
	.bottom A:visited { color:#FF9900; text-decoration:none; font-size:12px;}
	.bottom A:active { color:#FF9900; text-decoration:none; font-size:12px;}
	.bottom A:hover { color:#FF9900; text-decoration:none; font-size:12px;}
-->
        .Adela li { margin-top:0px; margin-bottom:5px; }
        .bottom { margin-top:10px; }
        </style>

        <div id="im2009" style="left: 0px; top: 0px; height: 180px">
            <ul class="Adela">      
   <li class="blue"><a href="http://download.csdn.net/album/detail/359" target="_blank">1、20个jQuery特效包全集收藏</a></li>
        <li class="blue"><a href="http://download.csdn.net/album/detail/351" target="_blank">2、项目管理与软件架构文档</a></li>
        <li class="blue"><a href="http://download.csdn.net/album/detail/349" target="_blank">3、17个VC++游戏源码学习分享 </a></li>
        <li class="blue"><a href="http://download.csdn.net/album/detail/27" target="_blank">4、技术大牛谈编程语言与工具 </a></li>
        <li class="blue"><a href="http://download.csdn.net/album/detail/331" target="_blank">5、13个C# winform程序源码学习</a></li>
        <li class="blue"><a href="http://download.csdn.net/album/detail/15" target="_blank">6、技术专家谈大数据应用PPT</a></li>
        <li class="blue"><a href="http://download.csdn.net/album/detail/343" target="_blank">7、jQuery EasyUI中文版开发工具包全集</a></li>
        <li class="blue"><a href="http://download.csdn.net/album/detail/417" target="_blank">8、C++程序设计课程资源</a></li>
        <li class="blue"><a href="http://download.csdn.net/album/list" target="_blank">9、专辑一键下载更快捷</a></li>


      
       </ul>
	</div>
<div class="content_qq"><span onclick="window.open(&#39;&#39;)" target="_blank"><font color="red"></font></span>
 </div>
 
 
</div>
</div></div><img src="./JVM 垃圾回收机制及性能调优案列 - kangojian的专栏 - 博客频道 - CSDN.NET_files/count_new.php" style="display: none;"></body></html>