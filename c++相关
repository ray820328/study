Eclipse 平台进行 C/C++ 开发
https://www.ibm.com/developerworks/cn/linux/opensource/os-ecc/index.html

静态代码分析工具Coverity
https://blog.csdn.net/yasi_xi/article/details/8349985

c++框架
https://cloud.tencent.com/developer/news/376747

vtune分析消耗热点

C++ new 的基本和高级用法
https://blog.csdn.net/xiaorenwuzyh/article/details/44514815

建议27：区分内存分配的方式
http://book.51cto.com/art/201202/317619.htm

Effective Modern C++
https://proquest.safaribooksonline.com/book/programming/cplusplus/9781491908419

core dump调试
core dump配置：ulimit -c或ulimit -a为0则默认关闭，
$ulimit -c unlimited　　（只对当前shell进程有效）
或在~/.bashrc　的最后加入： ulimit -c unlimited （一劳永逸）

gdb ./test test.core
gdb>bt
出错的代码位置
gdb>print 变量名

http://valgrind.org/downloads/current.html
./configure
make
make install
安装成功后，使用类似如下命令启动程序：
valgrind --tool=memcheck --leak-check=full --track-origins=yes --leak-resolution=high --show-reachable=yes --log-file=memchecklog ./controller_test
其中，–log-file=memchecklog指记录日志文件，名字为memchecklog；–tool=memcheck和–leak-check=full用于内存检测。

字节对齐的规则总结
https://blog.csdn.net/gaoyi221119/article/details/77989522

类型对齐方式（变量存放的起始地址相对于结构的起始地址的偏移量） 
Char 偏移量必须为sizeof(char)即1的倍数 
int 偏移量必须为sizeof(int)即4的倍数 
float 偏移量必须为sizeof(float)即4的倍数 
double 偏移量必须为sizeof(double)即8的倍数 
Short 偏移量必须为sizeof(short)即2的倍数

各成员变量在存放的时候根据在结构中出现的顺序依次申请空间，同时按照上面的对齐方式调整位置，空缺的字节VC会自动填充。
同时VC为了确保结构的大小为结构的字节边界数（即该结构中占用最大空间的类型所占用的字节数）的倍数，所以在为最后一个成员变量申请空间后，
还会根据需要自动填充空缺的字节。
struct MyStruct
{
  char dda; //偏移量为0，满足对齐方式，dda占用1个字节；
  double dda1;//下一个可用的地址的偏移量为1，不是sizeof(double)=8的倍数，需要补足7个字节才能使偏移量变为8（满足对齐方式），因此VC自动填充7个字节，
  //dda1存放在偏移量为8的地址上，它占用8个字节。
  int type； //下一个可用的地址的偏移量为16，是sizeof(int)=4的倍数，满足int的对齐方式，所以不需要VC自动填充，type存放在偏移量为16的地址上，
  它占用4个字节。
}；
//所有成员变量都分配了空间，空间总的大小为1+7+8+4=20，不是结构的节边界数（即结构中占用最大空间的类型所占用的字节数sizeof(double)=8）的倍数，
所以需要填充4个字节，以满足结构的大小为sizeof(double)=8的倍数。所以该结构总的大小为：sizeof(MyStruc)为1+7+8+4+4=24。其中总的有7+4=11个字节是VC自动填充的，没有放任何有意义的东西。
